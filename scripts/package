#!/bin/bash
set -euxo pipefail

source "$(dirname $0)/version"

CI_ARGS=""
if [ "${CI:-}" = "true" ]; then
    CI_ARGS="--progress=plain --pull"
fi

# Collect build artifacts
echo "Building ${IMAGE_FQN}-output:${TAG}"
docker build \
    ${CI_ARGS} \
    --tag "${IMAGE_FQN}-output:${TAG}" \
    --build-arg "VERSION=${VERSION}" \
    --target=output \
    --file "$(dirname $0)/../Dockerfile" \
    "$(dirname $0)/.."

DIST_DIR="$(dirname $0)/../dist/"
rm -rf "${DIST_DIR}"
mkdir -p "${DIST_DIR}"
ID=$(docker create "${IMAGE_FQN}-output:${TAG}")
docker cp "${ID}:/output/k3os-${ARCH}.iso" "${DIST_DIR}"
docker cp "${ID}:/output/k3os-initrd-${ARCH}" "${DIST_DIR}"
docker cp "${ID}:/output/k3os-kernel-${ARCH}.squashfs" "${DIST_DIR}"
docker cp "${ID}:/output/k3os-kernel-version-${ARCH}" "${DIST_DIR}"
docker cp "${ID}:/output/k3os-rootfs-${ARCH}.tar.gz" "${DIST_DIR}"
docker cp "${ID}:/output/k3os-vmlinuz-${ARCH}" "${DIST_DIR}"
docker cp "${ID}:/output/sha256sum-${ARCH}.txt" "${DIST_DIR}"
docker rm -fv "${ID}"
