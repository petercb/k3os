---
version: 2.1

orbs:
  go: circleci/go@1
  docker: circleci/docker@2

executors:
  arm64:
    environment:
      ARCH: arm64
    docker:
      - image: cimg/go:1.20
    resource_class: arm.large
  amd64:
    environment:
      ARCH: amd64
    docker:
      - image: cimg/go:1.20
    resource_class: large

commands:
  generate-version:
    steps:
      - run:
          name: Retrieve version
          command: |
            #!/bin/bash
            if [ -n "$(git status --porcelain --untracked-files=no)" ]; then
                DIRTY="-dirty"
            fi

            COMMIT=$(git rev-parse --short HEAD)
            GIT_TAG=${CIRCLE_TAG:-$(git tag -l --contains HEAD | head -n 1)}

            if [[ -z "$DIRTY" && -n "$GIT_TAG" ]]; then
                VERSION=$GIT_TAG
            else
                VERSION="$(git describe --always --tags)${DIRTY}"
            fi

            if echo $VERSION | grep -q dirty; then
                VERSION=dev
            fi
            echo "${VERSION}"

            echo "export VERSION=${VERSION}" >> "${BASH_ENV}"

  install-cst:
    steps:
      - run:
          name: Install container-structure-test
          command: |
            destFile="${HOME}/bin/container-structure-test"
            mkdir -p "${HOME}/bin"
            curl -L -o "${destFile}" \
              https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64
            chmod +x "${destFile}"

  run-cst:
    parameters:
      image:
        type: string
        default: ""
      registry:
        type: string
        default: ghcr.io
      tag:
        type: string
        default: $CIRCLE_SHA1
    steps:
      - run:
          name: << parameters.image >> - container-structure-test
          command: >-
            container-structure-test test
            --image
            << parameters.registry >>/<< parameters.image >>:<< parameters.tag >>
            --config cst/<< parameters.image >>.yaml
            --pull
            --output junit
            --test-report << parameters.image >>-cst-results.xml
      - store_test_results:
          path: << parameters.image >>-cst-results.xml


jobs:
  build:
    parameters:
      executor:
        type: executor
        default: amd64
      push:
        type: boolean
        default: false
    executor: << parameters.executor >>
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - install-cst
      - generate-version
      - docker/build:
          extra_build_args: >-
            --target=image
            --build-arg VERSION=$VERSION
          image: $CIRCLE_USERNAME/k3os
          registry: ghcr.io
          use-buildkit: true
      - run-cst:
          image: $CIRCLE_USERNAME/k3os
          registry: ghcr.io

  test:
    executor:
      name: go/default
      tag: '1.20'
    steps:
      - checkout
      - go/mod-download
      - go/test:
          covermode: atomic
          failfast: true
          race: true

workflows:
  continuous:
    jobs:
      - test

  tags:
    jobs:
      - build:
          context: github
          push: true
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/